
services:
  mongodb:
    image: mongodb/mongodb-community-server:7.0.0-ubi8
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - /C/Dev/docker-volumes/mongo/db:/data/db
      - /C/Dev/docker-volumes/mongo/configdb:/data/configdb
    networks:
      - default

  postgres:
    image: postgres:17.4-alpine3.21
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - /C/Dev/docker-volumes/postgres:/var/lib/postgresql/data
    networks:
      - default

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller               # The node acts as both broker and controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093  # Ports for broker and controller
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092                  # External listener for clients
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER         # Listener name for inter-controller communication
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT  # Security protocol for listeners
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093    # Quorum voters for the controller in KRaft mode
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1           # Replication factor for the offsets topic
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1   # Replication factor for transaction logs
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1              # Minimum in-sync replicas for transactional logs
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0           # Initial delay before consumer group rebalancing
      KAFKA_NUM_PARTITIONS: 3                             # Default number of partitions for new topics
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    volumes:
      - /C/Dev/docker-volumes/kafka/secrets:/etc/kafka/secrets
      - /C/Dev/docker-volumes/kafka/data:/var/lib/kafka/data
      - /C/Dev/docker-volumes/kafka/config:/mnt/shared/config
    networks:
      - default
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /C/Dev/docker-volumes/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.3
    container_name: kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch    
    networks:
      - default

  ollama:
      image: ollama/ollama:0.6.1
      container_name: ollama
      restart: unless-stopped
      ports:
        - "11434:11434"
      volumes:
        - /C/Dev/docker-volumes/ollama:/root/.ollama/models
      networks:
        - default
        
  open-webui:
    image: ghcr.io/open-webui/open-webui:git-74da9c4-ollama
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - /C/Dev/docker-volumes/open-webui:/app/backend/data
    networks:
      - default

networks:
  default: